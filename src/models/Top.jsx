/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useControls } from "leva";

export function Top(props) {
  const { nodes } = useGLTF("/glb/top.glb");
  const green4Redux = useTexture("/textures/test/baked.jpg");
  const { scale, rotation } = useControls({
    scale: {
      value: 4,
      min: 0.0001,
      max: 100,
      step: 0.0001,
    },
    rotation: {
      value: 0,
      min: 0,
      max: 2 * Math.PI,
      step: 0.0001,
    },
  });
  const { rotateX, rotateY, rotateZ } = useControls({
    rotateX: {
      value: 0,
      min: 0,
      max: 2 * Math.PI,
      step: 0.0001,
    },
    rotateY: {
      value: 0,
      min: 0,
      max: 2 * Math.PI,
      step: 0.0001,
    },
    rotateZ: {
      value: 0,
      min: 0,
      max: 2 * Math.PI,
      step: 0.0001,
    },
  });
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.EXPORT_GOOGLE_SAT_WM001.geometry}
        material={nodes.EXPORT_GOOGLE_SAT_WM001.material}
        position={[0, 1, 0]}
        // doubleSided={true}
        rotation={[0, 0, 0]}
        scale={0.00005}
      >
        <meshStandardMaterial
          map={green4Redux}
          side={THREE.DoubleSide}
          map-flipY={false}
          map-generateMipmaps={true}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/glb/top.glb");
