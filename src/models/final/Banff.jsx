/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useControls } from "leva";

export function Banff(props) {
  const { nodes } = useGLTF("/glb/final/banff-with-border.glb");
  const texture = useTexture("/textures/Untitled.jpg");
  const { posX, posY, posZ, rotationX, rotationY, rotationZ } = useControls({
    posX: {
      value: -4.5,
      min: -24,
      max: 10,
      step: 0.1,
    },
    posY: {
      value: 1,
      min: -1,
      max: 1,
      step: 0.01,
    },
    posZ: {
      value: 3,
      min: -5,
      max: 5,
      step: 0.1,
    },
    scale: {
      value: 0.144,
      min: 0,
      max: 100,
      step: 1,
    },
    rotationX: {
      value: 1.38,
      min: -Math.PI,
      max: Math.PI,
      step: 0.01,
    },
    rotationY: {
      value: 0.1,
      min: -Math.PI,
      max: Math.PI,
      step: 0.01,
    },
    rotationZ: {
      value: -0.1,
      min: -Math.PI,
      max: Math.PI,
      step: 0.01,
    },
  });
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow={false}
        geometry={nodes.Text.geometry}
        material={nodes.Text.material}
        // position={[2.9, 0.21, 7.628]}
        position={[posX, posY, posZ]}
        // position={[-4.4, 1.05, 3.]}
        // rotation={[Math.PI / 2, 0, -Math.PI]}
        rotation={[rotationX, rotationY, rotationZ]}
        // rotation={[1.56, 0.04, 1.26]}
        // scale={0.07}
        scale={[0.135 / 2.25, 0.236 / 2.25, 0.127 / 2.25]}
      >
        <meshBasicMaterial
          map={texture}
          map-flipY={false}
          roughness={1}
          metalness={0}
          map-generateMipmaps={true}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload("/glb/final/banff-with-border.glb");
// useGLTF.preload("/glb/final/banff.glb");
