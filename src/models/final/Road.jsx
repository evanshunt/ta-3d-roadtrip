/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/


import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useControls } from "leva";

function RoadThicc(props) {
    const { nodes, materials } = useGLTF("/glb/final/road-y-up.glb");
    const texture = useTexture('/textures/final/road-baked-test.jpg');
    const { posX, posY, posZ } = useControls({
        posX: {
            min: -8,
            max: 8,
            value: 0,
        },
        posY: {
            min: -8,
            max: 8,
            step: 0.01,
            value: 0,
        },
        posZ: {
            min: -8,
            max: 8,
            value: 0,
        }
    })
    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                scale={0.25}
                geometry={nodes.BezierCurve.geometry}
                position={[0, -1.02, 0]}

            >
                <meshStandardMaterial
                    map={texture}
                    map-flipY={false}
                    // map-generateMipmaps={true}
                    map-anisotropy={32}
                />
            </mesh>
        </group>
    );
}

useGLTF.preload("/glb/road.glb");

export default RoadThicc;
