/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useControls } from "leva";

const TopAltFinal = (props) => {
  const { nodes } = useGLTF("/glb/final/top.glb");
  // const texture = useTexture("/textures/final/baked-new-dark.webp");
  const texture = props.isMobile
    ? useTexture("/textures/final/baked-brit-mobile.webp")
    : useTexture("/textures/final/baked-brit.webp");
  // const textureMobile = useTexture("/textures/final/baked-new-dark.webp");

  // const { posX, posY, posZ, scale } = useControls({
  //   posX: {
  //     value: 0.46,
  //     min: -7,
  //     max: 7,
  //     step: 0.01,
  //   },
  //   posY: {
  //     value: 0.85,
  //     min: 0.5,
  //     max: 1.5,
  //     step: 0.01,
  //   },
  //   posZ: {
  //     value: 1.18,
  //     min: -7,
  //     max: 7,
  //     step: 0.01,
  //   },
  // });

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow={false}
        receiveShadow
        geometry={nodes.EXPORT_GOOGLE_SAT_WM.geometry}
        position={[0.46, 0.9, 1.195]}
        // position={[posX, posY, posZ]}
        // position={[-0.21, 0.935, 0.77]}
        // -0.28, 0.93, 0.76

        // rotation={[0, Math.PI * 1.5, 0]}
        rotation={[0, Math.PI * 1.5, 0]}
        scale={[0.635 * 0.00005, 0.7 * 0.00005, 0.635 * 0.00005]}
        // scale={[0.64, 0.2, 0.635]}
        // -0.03, 0.92, 0.58
      >
        <meshStandardMaterial
          // roughness={1}
          // metalness={0}
          map={texture}
          map-flipY={false}
          map-generateMipmaps={true}
          map-anisotropy={props.isMobile ? 1 : 8}
        />
      </mesh>
    </group>
  );
};

useGLTF.preload("/glb/final/top.glb");

export default TopAltFinal;
